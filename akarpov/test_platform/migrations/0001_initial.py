# Generated by Django 4.1.5 on 2023-02-24 16:18

import akarpov.utils.files
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=250)),
                ("help", models.CharField(blank=True, max_length=200)),
                ("required", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("slug", models.SlugField(blank=True, max_length=20)),
                ("public", models.BooleanField(default=True)),
                ("anyone_can_access", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to=akarpov.utils.files.user_file_upload_mixin
                    ),
                ),
                ("image_cropped", models.ImageField(blank=True, upload_to="cropped/")),
                ("passed", models.IntegerField(default=0)),
                ("time_till", models.DateTimeField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SelectAnswerQuestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("value", models.CharField(max_length=150)),
                ("correct", models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="NumberQuestion",
            fields=[
                (
                    "basequestion_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="test_platform.basequestion",
                    ),
                ),
                ("correct_answer", models.IntegerField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("test_platform.basequestion",),
        ),
        migrations.CreateModel(
            name="NumberRangeQuestion",
            fields=[
                (
                    "basequestion_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="test_platform.basequestion",
                    ),
                ),
                ("number_range_min", models.IntegerField()),
                ("number_range_max", models.IntegerField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("test_platform.basequestion",),
        ),
        migrations.CreateModel(
            name="SelectQuestion",
            fields=[
                (
                    "basequestion_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="test_platform.basequestion",
                    ),
                ),
                ("min_required_answers", models.IntegerField()),
                ("max_required_answers", models.IntegerField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("test_platform.basequestion",),
        ),
        migrations.CreateModel(
            name="TextQuestion",
            fields=[
                (
                    "basequestion_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="test_platform.basequestion",
                    ),
                ),
                ("correct_answer", models.CharField(max_length=250)),
                ("answer_should_contain", models.CharField(max_length=250)),
                ("answer_should_not_contain", models.CharField(max_length=250)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("test_platform.basequestion",),
        ),
        migrations.CreateModel(
            name="FormHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opened", models.DateTimeField(auto_now_add=True)),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users_opened",
                        to="test_platform.form",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opened_test_platform",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="basequestion",
            name="form",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fields",
                to="test_platform.form",
            ),
        ),
        migrations.AddField(
            model_name="basequestion",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.CreateModel(
            name="FormPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowed",
                        to="test_platform.form",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowed_test_platform",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("form", "user")},
            },
        ),
    ]
